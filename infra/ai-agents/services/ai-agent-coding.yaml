apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-coding
  namespace: ai-agents
  labels:
    app: ai-agent-coding
    app.kubernetes.io/name: ai-agent-coding
    app.kubernetes.io/part-of: medinovai
    version: v1.0.0
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: ai-agent-coding
  template:
    metadata:
      labels:
        app: ai-agent-coding
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-agent-coding
      containers:
      - name: ai-agent-coding
        image: medinovai/ai-agent-coding:v1.0.0
        imagePullPolicy: Always
        ports:
        - name: http-api
          containerPort: 8080
          protocol: TCP
        - name: grpc-api
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: SERVICE_NAME
          value: "ai-agent-coding"
        - name: AGENT_TYPE
          value: "coding"
        - name: LOG_LEVEL
          value: "INFO"
        - name: METRICS_PORT
          value: "9091"
        - name: HEALTH_PORT
          value: "8081"
        - name: GRPC_PORT
          value: "9090"
        - name: HTTP_PORT
          value: "8080"
        - name: MAX_CONCURRENT_TASKS
          value: "10"
        - name: CODE_REVIEW_TIMEOUT
          value: "600"
        - name: REFACTOR_TIMEOUT
          value: "900"
        - name: GENERATION_TIMEOUT
          value: "300"
        - name: SUPPORTED_LANGUAGES
          value: "python,javascript,typescript,java,go,rust,cpp,csharp"
        - name: MAX_FILE_SIZE
          value: "10485760"
        - name: ENABLE_SAST
          value: "true"
        - name: ENABLE_SECURITY_SCAN
          value: "true"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: code-cache
          mountPath: /tmp/code-cache
          readOnly: false
      volumes:
      - name: code-cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-coding
  namespace: ai-agents
  labels:
    app: ai-agent-coding
    app.kubernetes.io/name: ai-agent-coding
    app.kubernetes.io/part-of: medinovai
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http-api
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc-api
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: 9091
    protocol: TCP
  - name: health
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: ai-agent-coding
  sessionAffinity: None 