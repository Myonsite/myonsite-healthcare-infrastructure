# MedinovAI Service Mesh Authorization Policies
# HIPAA & ISO 27001/27002 Compliant Access Control

# Default deny-all policy for infrastructure namespace
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deny-all-default
  namespace: infrastructure
spec:
  # Empty spec means deny all by default
  {}
---
# Allow health checks from kubelet
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: allow-healthchecks
  namespace: infrastructure
spec:
  action: ALLOW
  rules:
  - to:
    - operation:
        paths: ["/healthz", "/readyz", "/livez"]
---
# Audit Agent - Full access to audit APIs and databases
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: audit-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: audit-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/infrastructure/sa/backstage"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/audit/*", "/api/compliance/*"]
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/prometheus"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/metrics"]
---
# Discovery Agent - Read-only access to service discovery
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: discovery-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: discovery-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/infrastructure/sa/audit-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        methods: ["GET"]
        paths: ["/api/discovery/*", "/api/services/*"]
---
# Diagnosis Agent - Restricted to medical staff with JWT validation
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: diagnosis-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: diagnosis-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/infrastructure/sa/backstage"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT"]
        paths: ["/api/diagnosis/*", "/api/patient/*"]
    when:
    - key: request.auth.claims[role]
      values: ["doctor", "nurse", "medical_admin"]
    - key: request.auth.claims[scope]
      values: ["patient:read", "patient:write", "diagnosis:write"]
---
# Billing Agent - Highly restricted financial access
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: billing-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: billing-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/infrastructure/sa/audit-agent"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/api/billing/audit/*"]
  - from:
    - source:
        principals: ["cluster.local/ns/infrastructure/sa/backstage"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/billing/*"]
    when:
    - key: request.auth.claims[role]
      values: ["billing_admin", "finance_manager"]
    - key: request.auth.claims[scope]
      values: ["billing:read", "billing:write"]
---
# Whisper Agent - Audio processing access
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: whisper-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: whisper-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals: 
        - "cluster.local/ns/infrastructure/sa/diagnosis-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        methods: ["POST"]
        paths: ["/api/transcribe/*", "/api/audio/*"]
---
# LangServe Agent - LLM access control
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: langserve-agent-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: langserve-agent
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - "cluster.local/ns/infrastructure/sa/diagnosis-agent"
        - "cluster.local/ns/infrastructure/sa/discovery-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        methods: ["POST"]
        paths: ["/api/llm/*", "/api/generate/*"]
    when:
    - key: request.headers[x-request-purpose]
      values: ["medical_diagnosis", "service_discovery", "documentation"]
---
# Backstage Portal - Frontend access with user authentication
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: backstage-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: backstage
  action: ALLOW
  rules:
  # Allow public access to static assets
  - to:
    - operation:
        methods: ["GET"]
        paths: ["/", "/static/*", "/assets/*", "/*.js", "/*.css", "/favicon.ico"]
  # Require authentication for API access
  - to:
    - operation:
        methods: ["GET", "POST", "PUT", "DELETE"]
        paths: ["/api/*"]
    when:
    - key: request.auth.claims[iss]
      values: ["https://medinovai.auth0.com/", "https://medinovai.okta.com/"]
---
# Database access policies
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: mysql-access-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: mysql
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - "cluster.local/ns/infrastructure/sa/audit-agent"
        - "cluster.local/ns/infrastructure/sa/billing-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        ports: ["3306"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: postgresql-access-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: postgresql
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - "cluster.local/ns/infrastructure/sa/diagnosis-agent"
        - "cluster.local/ns/infrastructure/sa/discovery-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        ports: ["5432"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: redis-access-policy
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: redis
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - "cluster.local/ns/infrastructure/sa/whisper-agent"
        - "cluster.local/ns/infrastructure/sa/langserve-agent"
        - "cluster.local/ns/infrastructure/sa/backstage"
    to:
    - operation:
        ports: ["6379"] 